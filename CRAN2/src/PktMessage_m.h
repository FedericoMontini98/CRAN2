//
// Generated file, do not edit! Created by nedtool 5.7 from PktMessage.msg.
//

#ifndef __PKTMESSAGE_M_H
#define __PKTMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>PktMessage.msg:16</tt> by nedtool.
 * <pre>
 * packet PktMessage
 * {
 *     int target_cell;
 *     double size;
 *     simtime_t enqueue_time;
 * }
 * </pre>
 */
class PktMessage : public ::omnetpp::cPacket
{
  protected:
    int target_cell;
    double size;
    ::omnetpp::simtime_t enqueue_time;

  private:
    void copy(const PktMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PktMessage&);

  public:
    PktMessage(const char *name=nullptr, short kind=0);
    PktMessage(const PktMessage& other);
    virtual ~PktMessage();
    PktMessage& operator=(const PktMessage& other);
    virtual PktMessage *dup() const override {return new PktMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getTarget_cell() const;
    virtual void setTarget_cell(int target_cell);
    virtual double getSize() const;
    virtual void setSize(double size);
    virtual ::omnetpp::simtime_t getEnqueue_time() const;
    virtual void setEnqueue_time(::omnetpp::simtime_t enqueue_time);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PktMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PktMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __PKTMESSAGE_M_H

